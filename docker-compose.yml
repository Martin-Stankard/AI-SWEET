version: '3.8'

services:
  open-webui:
    image: ghcr.io/open-webui/open-webui:latest
    container_name: open-webui
    volumes:
      - open-webui:/app/backend/data
    pull_policy: always
    depends_on:
      - ollama
    ports:
      - 8080:8080
    environment: 
      - OLLAMA_BASE_URLS=http://host.docker.internal:11434
      - ENV=dev
      - WEBUI_AUTH=False
      - WEBUI_NAME=baby
      - WEBUI_URL=http://localhost:8080
      - WEBUI_SECRET_KEY=123456
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped
    networks:
      - ollama-docker   

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - 11434:11434
    volumes:
      - ollama:/root/.ollama
    pull_policy: always
    tty: true
    restart: always
    environment:
      - OLLAMA_KEEP_ALIVE=24h
    networks:
      - ollama-docker
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  pipelines:
    image: ghcr.io/open-webui/pipelines:main
    container_name: pipelines
    volumes:
      - pipelines:/app/pipelines
    pull_policy: always
    ports:
      - 9099:9099
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: always
    networks:
      - ollama-docker
    profiles:
      - pipelines

  flowise:
    image: flowiseai/flowise
    container_name: flowise
    volumes:
      - flowise:/app/flowise
    pull_policy: always
    ports:
      - 9098:9098
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: always
    environment:
      - PORT=${PORT}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - IFRAME_ORIGINS=${IFRAME_ORIGINS}
      - FLOWISE_USERNAME=${FLOWISE_USERNAME}
      - FLOWISE_PASSWORD=${FLOWISE_PASSWORD}
      - FLOWISE_FILE_SIZE_LIMIT=${FLOWISE_FILE_SIZE_LIMIT}
      - DEBUG=${DEBUG}
      - DATABASE_PATH=${DATABASE_PATH}
      - DATABASE_TYPE=${DATABASE_TYPE}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_SSL=${DATABASE_SSL}
      - DATABASE_SSL_KEY_BASE64=${DATABASE_SSL_KEY_BASE64}
      - APIKEY_STORAGE_TYPE=${APIKEY_STORAGE_TYPE}
      - APIKEY_PATH=${APIKEY_PATH}
      - SECRETKEY_PATH=${SECRETKEY_PATH}
      - FLOWISE_SECRETKEY_OVERWRITE=${FLOWISE_SECRETKEY_OVERWRITE}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_PATH=${LOG_PATH}
      - BLOB_STORAGE_PATH=${BLOB_STORAGE_PATH}
      - DISABLE_FLOWISE_TELEMETRY=${DISABLE_FLOWISE_TELEMETRY}
      - MODEL_LIST_CONFIG_JSON=${MODEL_LIST_CONFIG_JSON}
      - GLOBAL_AGENT_HTTP_PROXY=${GLOBAL_AGENT_HTTP_PROXY}
      - GLOBAL_AGENT_HTTPS_PROXY=${GLOBAL_AGENT_HTTPS_PROXY}
      - GLOBAL_AGENT_NO_PROXY=${GLOBAL_AGENT_NO_PROXY}
      - DISABLED_NODES=${DISABLED_NODES}
    networks:
      - ollama-docker


  qdrant:
      image: qdrant/qdrant:latest
      restart: always
      container_name: qdrant
      ports:
        - 6333:6333
        - 6334:6334
      expose:
        - 6333
        - 6334
        - 6335
      configs:
        - source: qdrant_config
          target: /qdrant/config/production.yaml
      volumes:
        - ../qdrant_data:/qdrant/storage
      networks:
      - ollama-docker


configs:
  qdrant_config:
    content: |
      log_level: INFO 


networks:
  ollama-docker:
    driver: bridge  
    

volumes:
  pipelines:
  ollama:
  open-webui:
  flowise:
